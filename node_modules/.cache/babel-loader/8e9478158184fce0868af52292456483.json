{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Uch\\\\React\\\\udemy course\\\\src\\\\components\\\\Expenses\\\\Expenses.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Card from '../UI/Card';\nimport ExpenseDate from './ExpenseDate';\nimport './ExpenseItem.css';\nimport ExpensesFilter from './ExpensesFilter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Expenses(props) {\n  _s();\n\n  const [title, setTitle] = useState(props.title);\n  const [filterValue, setFilterValue] = useState(props.selected);\n\n  const changeTitle = () => {\n    setTitle('updated');\n    console.log('updated');\n  };\n\n  const changeFilterValue = value => {\n    setFilterValue(value);\n    props.changeFilterValue(value);\n  };\n\n  const filteredExpenses = props.expenses.filter(element => {\n    return element.date.getFullYear().toString() === filterValue;\n  });\n\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No expenses found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 27\n  }, this);\n\n  if (filteredExpenses.length > 0) {\n    expensesContent = filteredExpenses.map(i => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-item\",\n        children: [/*#__PURE__*/_jsxDEV(ExpenseDate, {\n          date: i.date\n        }, i.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"expense-item__description\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: i.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"expense-item__price\",\n            children: [\"$\", i.amount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: changeTitle,\n            children: \"change title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expense-item\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        onSelectedValue: changeFilterValue,\n        selected: props.selected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), expensesContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Expenses, \"0k9hbODU7Or2Hnzmdna7Wj9umY8=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["C:/Users/Uch/React/udemy course/src/components/Expenses/Expenses.jsx"],"names":["React","useState","Card","ExpenseDate","ExpensesFilter","Expenses","props","title","setTitle","filterValue","setFilterValue","selected","changeTitle","console","log","changeFilterValue","value","filteredExpenses","expenses","filter","element","date","getFullYear","toString","expensesContent","length","map","i","id","amount"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,mBAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAErB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAACK,KAAK,CAACC,KAAP,CAAlC;AACA,QAAM,CAACE,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAACK,KAAK,CAACK,QAAP,CAA9C;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACtBJ,IAAAA,QAAQ,CAAC,SAAD,CAAR;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,GAHD;;AAKA,QAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACjCN,IAAAA,cAAc,CAACM,KAAD,CAAd;AACAV,IAAAA,KAAK,CAACS,iBAAN,CAAwBC,KAAxB;AACH,GAHD;;AAKA,QAAMC,gBAAgB,GAAGX,KAAK,CAACY,QAAN,CAAeC,MAAf,CAAsBC,OAAO,IAAI;AACtD,WAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0Cd,WAAjD;AACH,GAFwB,CAAzB;;AAKA,MAAIe,eAAe,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAtB;;AAEA,MAAIP,gBAAgB,CAACQ,MAAjB,GAA0B,CAA9B,EAAiC;AAC7BD,IAAAA,eAAe,GAAGP,gBAAgB,CAACS,GAAjB,CAAqBC,CAAC,IAAI;AACxC,0BACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACI,QAAC,WAAD;AAAwB,UAAA,IAAI,EAAEA,CAAC,CAACN;AAAhC,WAAkBM,CAAC,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,2BAAf;AAAA,kCACI;AAAA,sBAAKD,CAAC,CAACpB;AAAP;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,SAAS,EAAC,qBAAf;AAAA,4BAAuCoB,CAAC,CAACE,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAQ,YAAA,OAAO,EAAEjB,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AASE,KAVY,CAAlB;AAYH;;AAED,sBACI;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA,8BACI,QAAC,cAAD;AAAgB,QAAA,eAAe,EAAEG,iBAAjC;AAAoD,QAAA,QAAQ,EAAET,KAAK,CAACK;AAApE;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKa,eAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAQH;;GA7CQnB,Q;;KAAAA,Q;AA+CT,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport Card from '../UI/Card';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport './ExpenseItem.css';\r\nimport ExpensesFilter from './ExpensesFilter';\r\n\r\nfunction Expenses(props) {\r\n\r\n    const [title, setTitle] = useState(props.title)\r\n    const [filterValue, setFilterValue] = useState(props.selected)\r\n\r\n    const changeTitle = () => {\r\n        setTitle('updated');\r\n        console.log('updated')\r\n    }\r\n\r\n    const changeFilterValue = (value) => {\r\n        setFilterValue(value);\r\n        props.changeFilterValue(value);\r\n    }\r\n\r\n    const filteredExpenses = props.expenses.filter(element => {\r\n        return element.date.getFullYear().toString() === filterValue\r\n    }\r\n    );\r\n\r\n    let expensesContent = <p>No expenses found.</p>;\r\n\r\n    if (filteredExpenses.length > 0) {\r\n        expensesContent = filteredExpenses.map(i => {\r\n            return (\r\n                <div className='expense-item'>\r\n                    <ExpenseDate key={i.id} date={i.date} />\r\n                    <div className='expense-item__description'>\r\n                        <h2>{i.title}</h2>\r\n                        <div className='expense-item__price'>${i.amount}</div>\r\n                        <button onClick={changeTitle}>change title</button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card className='expense-item'>\r\n                <ExpensesFilter onSelectedValue={changeFilterValue} selected={props.selected} />\r\n                {expensesContent}\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Expenses;"]},"metadata":{},"sourceType":"module"}