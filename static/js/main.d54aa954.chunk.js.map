{"version":3,"sources":["components/UI/Card.jsx","components/Expenses/ExpenseDate.jsx","components/Expenses/ExpenseItem.jsx","components/Expenses/ExpensesList.jsx","components/Expenses/ExpensesFilter.jsx","components/Chart/ChartBar.jsx","components/Chart/Chart.jsx","components/Expenses/ExpensesChart.jsx","components/Expenses/Expenses.jsx","components/NewExpense/ExpenseForm.jsx","components/NewExpense/NewExpense.jsx","App.js","index.js"],"names":["Card","props","classes","className","children","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","key","title","amount","ExpensesList","filteredExpenses","length","map","i","id","ExpensesFilter","value","selected","onChange","event","selectedValue","target","onSelectedValue","selectValue","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointsValue","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","expense","getMonth","Expenses","useState","filterValue","setFilterValue","filter","element","toString","changeFilterValue","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","enteredData","Date","onNewExpenseData","console","log","type","min","step","onClick","switchForm","NewExpense","onAddActive","setOnAddActive","enteredExpenseData","random","onNewExpense","App","setExpenses","newElement","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d54aa954.chunk.js","sourcesContent":["import './Card.css';\r\n\r\nfunction Card (props) {\r\n\r\n    const classes = 'card ' + props.className;\r\n\r\n    return <div className={classes}>{props.children}</div>\r\n}\r\n\r\nexport default Card;","import './ExpenseDate.css';\r\n\r\nfunction ExpenseDate(props) {\r\n\r\n    const month = props.date.toLocaleString('en-US', { month: 'long' });\r\n    const day = props.date.toLocaleString('en-US', { day: '2-digit' });\r\n    const year = props.date.getFullYear();\r\n\r\n    return (\r\n        <div className=\"expense-date\">\r\n            <div className=\"expense-date__month\">{month}</div>\r\n            <div className=\"expense-date__year\">{year}</div>\r\n            <div className=\"expense-date__day\">{day}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExpenseDate;","import React from 'react';\r\nimport './ExpenseItem.css';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card'\r\n\r\nconst ExpenseItem = (props) => {\r\n    return (\r\n        <li>\r\n        <Card className='expense-item'>\r\n                <ExpenseDate key={props.key}\r\n                            date={props.date} />\r\n                <div className='expense-item__description'>\r\n                    <h2>{props.title}</h2>\r\n                    <div className='expense-item__price'>${props.amount}</div>\r\n                </div>\r\n        </Card>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default ExpenseItem;","\r\nimport React from 'react';\r\nimport './ExpensesList.css';\r\nimport ExpenseItem from './ExpenseItem';\r\n\r\nconst ExpensesList = (props) => {\r\n\r\n    if (props.filteredExpenses.length === 0) {\r\n        return <h2 className='expenses-list__fallback'>Found no expenses.</h2>\r\n    }\r\n    return <ul className='expenses-list'>\r\n        {props.filteredExpenses.map(i =>\r\n            <ExpenseItem key={i.id}\r\n                title={i.title}\r\n                amount={i.amount}\r\n                date={i.date}\r\n            />\r\n        )}\r\n    </ul>\r\n}\r\n\r\nexport default ExpensesList;","import React from 'react';\r\nimport './ExpensesFilter.css';\r\n\r\n\r\nconst ExpensesFilter = (props) => {\r\n\r\n    function selectValue(event) {\r\n        const selectedValue = event.target.value;\r\n        props.onSelectedValue(selectedValue);\r\n    }\r\n\r\n    return (\r\n        <div className='expenses-filter'>\r\n            <div className='expenses-filter__control' >\r\n                <label >Filter</label>\r\n                <select value={props.selected}\r\n                        onChange={(event) => selectValue(event)}\r\n                        >\r\n                    <option value='2022' >2022</option>\r\n                    <option value='2021' >2021</option>\r\n                    <option value='2020' >2020</option>\r\n                    <option value='2019' >2019</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ExpensesFilter;","import React from 'react';\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = props => {\r\n\r\n    let barFillHeight ='0%';\r\n\r\n    if (props.maxValue > 0) {\r\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%'\r\n    }\r\n    return (\r\n    <div className='chart-bar'>\r\n        <div className='chart-bar__inner'>\r\n            <div className='chart-bar__fill'\r\n                style={{height: barFillHeight}}></div>\r\n        </div>\r\n        <div className='chart-bar_label'>{props.label}</div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ChartBar","import React from 'react';\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = props => {\r\n    const dataPointsValue = props.dataPoints.map(dataPoint => dataPoint.value)\r\n    const totalMaximum = Math.max(...dataPointsValue)\r\n\r\n    return <div className='chart'>\r\n        {props.dataPoints.map(dataPoint =>\r\n            <ChartBar key={dataPoint.label}\r\n                    value={dataPoint.value}\r\n                    maxValue={totalMaximum}\r\n                    label={dataPoint.label} />\r\n        )}\r\n\r\n    </div>\r\n}\r\n\r\nexport default Chart;","import React from 'react';\r\nimport Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = (props) => {\r\nconst chartDataPoints = [\r\n\r\n { label: 'Jan', value: 0 },\r\n { label: 'Feb', value: 0 },\r\n { label: 'Mar', value: 0 },\r\n { label: 'Apr', value: 0 },\r\n { label: 'May', value: 0 },\r\n { label: 'Jun', value: 0 },\r\n { label: 'Jul', value: 0 },\r\n { label: 'Aug', value: 0 },\r\n { label: 'Sep', value: 0 },\r\n { label: 'Okt', value: 0 },\r\n { label: 'Nov', value: 0 },\r\n { label: 'Dec', value: 0 },\r\n]\r\n\r\nfor ( const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth(); //starting at 0=> January => 0\r\n    chartDataPoints[expenseMonth].value += expense.amount\r\n}\r\n\r\n        return <Chart dataPoints={chartDataPoints}/>\r\n}\r\n\r\nexport default ExpensesChart;","import React, { useState } from 'react';\r\nimport Card from '../UI/Card';\r\nimport ExpensesList from './ExpensesList';\r\nimport './Expenses.css';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpensesChart from './ExpensesChart';\r\n\r\nfunction Expenses(props) {\r\n\r\n    const [filterValue, setFilterValue] = useState(props.selected)\r\n\r\n    const changeFilterValue = (value) => {\r\n        setFilterValue(value);\r\n        props.changeFilterValue(value);\r\n    }\r\n\r\n    const filteredExpenses = props.expenses.filter(element => {\r\n        return (\r\n            element.date.getFullYear().toString() === filterValue\r\n        )\r\n    });\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Card className='expenses'>\r\n                <ExpensesFilter onSelectedValue={changeFilterValue} selected={props.selected} />\r\n                <ExpensesChart expenses={filteredExpenses}/>\r\n                <ExpensesList filteredExpenses={filteredExpenses}/>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Expenses;","import React, { useState } from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n\r\n    const [enteredTitle, setEnteredTitle] = useState('');\r\n    const [enteredAmount, setEnteredAmount] = useState('');\r\n    const [enteredDate, setEnteredDate] = useState('');\r\n\r\n\r\n    function onTitleChange(event) {\r\n        setEnteredTitle(event.target.value);\r\n        console.log(event.target.value)\r\n    };\r\n\r\n    function onEnteredAmount(event) {\r\n        setEnteredAmount(event.target.value);\r\n        console.log(event.target.value)\r\n    };\r\n\r\n    function onEnteredDateChange(event) {\r\n        setEnteredDate(event.target.value);\r\n        console.log(event.target.value)\r\n    };\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        const enteredData = {\r\n            title: enteredTitle,\r\n            amount: enteredAmount,\r\n            date: new Date(enteredDate),\r\n        }\r\n\r\n        props.onNewExpenseData(enteredData)\r\n\r\n        console.log(enteredData)\r\n\r\n        setEnteredTitle('');\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n    }\r\n\r\n    return <form onSubmit={handleSubmit}>\r\n        <div className='new-expense__controls'>\r\n            <div className='new-expense__control'>\r\n                <label>Title</label>\r\n                <input type=\"text\"\r\n                    onChange={onTitleChange}\r\n                    value={enteredTitle} />\r\n            </div>\r\n            <div className='new-expense__control'>\r\n                <label>Amount</label>\r\n                <input type='number'\r\n                    min='0.01'\r\n                    step='0.01'\r\n                    onChange={onEnteredAmount}\r\n                    value={enteredAmount} />\r\n            </div>\r\n            <div className='new-expense__control'>\r\n                <label>Date</label>\r\n                <input type=\"date\"\r\n                    min='2019-01-01'\r\n                    max='2021-11-06'\r\n                    onChange={onEnteredDateChange}\r\n                    value={enteredDate} />\r\n            </div>\r\n            <button type='submit'>Add expense</button>\r\n            <button onClick={props.switchForm}>Cancel</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\n\r\nexport default ExpenseForm;","import React, { useState } from 'react';\r\nimport './NewExpense.css';\r\nimport ExpenseForm from './ExpenseForm';\r\n\r\nconst NewExpense = (props) => {\r\n\r\n    const [onAddActive, setOnAddActive] = useState(true)\r\n\r\n    const saveNewExpanseData = (enteredExpenseData) => {\r\n        const enteredData = {\r\n            ...enteredExpenseData,\r\n            id: Math.random().toString()\r\n        }\r\n        props.onNewExpense(enteredData);\r\n        setOnAddActive(!onAddActive);\r\n    }\r\n\r\n    const switchForm = () => {\r\n        setOnAddActive(!onAddActive)\r\n    }\r\n\r\n\r\n    return <div className='new-expense'>\r\n        {!onAddActive && (<button onClick={switchForm}>Add new expenses</button>)}\r\n        {onAddActive && (<ExpenseForm onNewExpenseData={saveNewExpanseData} switchForm />)}\r\n    </div>\r\n}\r\n\r\nexport default NewExpense;","import React, {useState} from 'react';\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from './components/NewExpense/NewExpense';\n\n\nfunction App() {\n\n  const [expenses, setExpenses] = useState([\n    {\n        id: 'e1',\n        title: 'Toilet Paper',\n        amount: 94.12,\n        date: new Date(2020, 7, 14),\n    },\n    {\n        id: 'e2',\n        title: 'New TV',\n        amount: 799.49,\n        date: new Date(2021, 2, 12)\n    },\n    {\n        id: 'e3',\n        title: 'Car Insurance',\n        amount: 294.67,\n        date: new Date(2019, 2, 28),\n    },\n    {\n        id: 'e4',\n        title: 'New Desk (Wooden)',\n        amount: 450,\n        date: new Date(2021, 5, 12),\n    },\n  ]);\n\n  const [filterValue, setFilterValue] = useState ('2022');\n\nconst saveNewExpense = (enteredData) => {\n  const newElement = {...enteredData}\n  setExpenses((prevState) => [...prevState, newElement])\n  };\n\n const saveFilterValue = (value) => {\n  setFilterValue(value);\n  }\n\n  return (\n    <div >\n      <NewExpense onNewExpense = {saveNewExpense}/>\n      <Expenses expenses={expenses} changeFilterValue={saveFilterValue} selected={filterValue}/>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}